#!/usr/bin/env python

import os


def daydir(day):
    return f"day{day}"


def main(args):
    if args.day:

        # -- Copy part1 over to part2
        if args.copy_part:
            day_dir = daydir(args.day)
            part1 = os.path.join(day_dir, "part1.py")
            part2 = os.path.join(day_dir, "part2.py")
            if not os.path.isdir(day_dir):
                print(f"Day directory '{day_dir}' doesn't exist yet, so no part to copy")
                exit(1)
            elif os.path.isfile(part2):
                print(f"Part file '{part2}' already exists, not copying over it for fear of losing something.")
                exit(1)
            os.system(f"cp {part1} {part2}")
            os.system(f"chmod a+x {part2}")
            print(f"Copied {part1} to {part2}")
            exit(0)

        new_daydir = daydir(args.day)
        if os.path.isdir(new_daydir):
            print(f"Directory {new_daydir} already exists. Bailing.")
            exit(1)

        # -- Clone previous day --
        if args.clone_day is not None:
            clone_day = args.clone_day if args.clone_day else args.day - 1
            clone_daydir = daydir(clone_day)
            cmd = f"cp -r {clone_daydir} {new_daydir}"
            os.system(cmd)

        # -- New blank day --
        else:
            # Make dirs
            input_dir = os.path.join(new_daydir, "input")
            os.makedirs(input_dir)

            # Setup python script
            part1_script = os.path.join(new_daydir, "part1.py")
            os.system(f"cp resources/part1.py {part1_script}")
            os.system(f"chmod a+x {part1_script}")

            # Create placeholders for input data
            for f in ['part1.txt', 'test1.txt', 'part2.txt', 'test2.txt']:
                os.system(f"touch {input_dir}/{f}")


if __name__ == '__main__':

    # Make sure we're running from this directory, since we build dirs with that expectation
    script_dir = os.path.dirname(os.path.abspath(__file__))
    cwd = os.getcwd()
    if script_dir != cwd:
        print(f"This script must be run from {script_dir}.")
        exit(1)


    import argparse

    parser = argparse.ArgumentParser()
    parser.add_argument('-d', '--day', help='Day number', type=int, required=True)
    parser.add_argument('-C', '--clone_day', help="Clone day as new day (use 0 for previous day)", type=int)
    parser.add_argument('-X', '--copy_part', help="Copy part1.py to part2.py for the given day", default=False, action="store_true")
    args = parser.parse_args()

    main(args)

